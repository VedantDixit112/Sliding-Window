class Solution {
    public String minWindow(String s, String t) {
        Map<Character,Integer>map=new HashMap<>();
        if(t.length()>s.length()){
            return "";
        }
        for(int i=0;i<t.length();i++){
            map.put(t.charAt(i),map.getOrDefault(t.charAt(i),0)+1);
        }
        int i=0;
        int j=0;
        int si=0;
        int min=Integer.MAX_VALUE;
        int count=t.length();
        while(j<s.length()){
            if(map.containsKey(s.charAt(j)) && map.get(s.charAt(j))>0){
                count--;
            }
            map.put(s.charAt(j),map.getOrDefault(s.charAt(j),0)-1);
            while(count==0){
                int win=j-i+1;
                if(win<min){
                    min=win;
                    si=i;
                }
                map.put(s.charAt(i),map.getOrDefault(s.charAt(i),0)+1);
                if(map.containsKey(s.charAt(i)) && map.get(s.charAt(i))>0){
                    count++;
                }
                i++;
            }
            j++;
        }
        return min==Integer.MAX_VALUE?"":s.substring(si,si+min);
    }
}
